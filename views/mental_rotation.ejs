<!doctype html>
<html>

    <head>
        <title>mental rotation task</title>
        <!-- jQuery -->
        <script src="http://ajax.googleapis.com/ajax/libs/jquery/1.11.1/jquery.min.js"></script>
        <!-- Load the jspsych library and plugins -->
        <script src="scripts/jspsych.js"></script>
        <script src="scripts/error_check.js"></script>
        <script src="scripts/plugins/jspsych-two-stim.js"></script>
        <script src="scripts/plugins/jspsych-text.js"></script>
        <link href="css/reset.css" type="text/css" rel="stylesheet"></link>
        <link href="css/experiment.css" type="text/css" rel="stylesheet"></link>
        <link href="css/mental_rotation.css" type="text/css" rel="stylesheet"></link>
        
    </head>

    <body>
        <div id="rotation_container" class = "parent mask">
            <div id = "stimulus_container" class = "child ">
                <div id="jspsych_target" class = "content"></div>
            </div>
        </div>
    </body>
    <script type="text/javascript">
    error_check();
    var userId = "<%= userId%>";

    var images = [
        {stimulus:"img/mental_rotation/0A.png", data: {item: "A", type: "identical", correct_key: "81", rotation: "0"}},
        {stimulus:"img/mental_rotation/0Am.png", data: {item: "A", type: "mirrored", correct_key: "80", rotation: "0"}},
        {stimulus:"img/mental_rotation/120_A.png", data: {item: "A", type: "identical", correct_key: "81", rotation: "120"}},
        {stimulus:"img/mental_rotation/120_Am.png", data: {item: "A", type: "mirrored", correct_key: "80", rotation: "120"}},
        {stimulus:"img/mental_rotation/180_A.png", data: {item: "A", type: "identical", correct_key: "81", rotation: "180"}},
        {stimulus:"img/mental_rotation/180_Am.png", data: {item: "A", type: "mirrored", correct_key: "80", rotation: "180"}},
        {stimulus:"img/mental_rotation/240_A.png", data: {item: "A", type: "identical", correct_key: "81", rotation: "240"}},
        {stimulus:"img/mental_rotation/240_Am.png", data: {item: "A", type: "mirrored", correct_key: "80", rotation: "240"}},
        {stimulus:"img/mental_rotation/300_A.png", data: {item: "A", type: "identical", correct_key: "81", rotation: "300"}},
        {stimulus:"img/mental_rotation/300_Am.png", data: {item: "A", type: "mirrored", correct_key: "80", rotation: "300"}},
        {stimulus:"img/mental_rotation/60_A.png", data: {item: "A", type: "identical", correct_key: "81", rotation: "60"}},
        {stimulus:"img/mental_rotation/60_Am.png", data: {item: "A", type: "mirrored", correct_key: "80", rotation: "60"}},
        {stimulus:"img/mental_rotation/0B.png", data: {item: "B", type: "identical", correct_key: "81", rotation: "0"}},
        {stimulus:"img/mental_rotation/0Bm.png", data: {item: "B", type: "mirrored", correct_key: "80", rotation: "0"}},
        {stimulus:"img/mental_rotation/120_B.png", data: {item: "B", type: "identical", correct_key: "81", rotation: "120"}},
        {stimulus:"img/mental_rotation/120_Bm.png", data: {item: "B", type: "mirrored", correct_key: "80", rotation: "120"}},
        {stimulus:"img/mental_rotation/180_B.png", data: {item: "B", type: "identical", correct_key: "81", rotation: "180"}},
        {stimulus:"img/mental_rotation/180_Bm.png", data: {item: "B", type: "mirrored", correct_key: "80", rotation: "180"}},
        {stimulus:"img/mental_rotation/240_B.png", data: {item: "B", type: "identical", correct_key: "81", rotation: "240"}},
        {stimulus:"img/mental_rotation/240_Bm.png", data: {item: "B", type: "mirrored", correct_key: "80", rotation: "240"}},
        {stimulus:"img/mental_rotation/300_B.png", data: {item: "B", type: "identical", correct_key: "81", rotation: "300"}},
        {stimulus:"img/mental_rotation/300_Bm.png", data: {item: "B", type: "mirrored", correct_key: "80", rotation: "300"}},
        {stimulus:"img/mental_rotation/60_B.png", data: {item: "B", type: "identical", correct_key: "81", rotation: "60"}},
        {stimulus:"img/mental_rotation/60_Bm.png", data: {item: "B", type: "mirrored", correct_key: "80", rotation: "60"}},
        {stimulus:"img/mental_rotation/0C.png", data: {item: "C", type: "identical", correct_key: "81", rotation: "0"}},
        {stimulus:"img/mental_rotation/0Cm.png", data: {item: "C", type: "mirrored", correct_key: "80", rotation: "0"}},
        {stimulus:"img/mental_rotation/120_C.png", data: {item: "C", type: "identical", correct_key: "81", rotation: "120"}},
        {stimulus:"img/mental_rotation/120_Cm.png", data: {item: "C", type: "mirrored", correct_key: "80", rotation: "120"}},
        {stimulus:"img/mental_rotation/180_C.png", data: {item: "C", type: "identical", correct_key: "81", rotation: "180"}},
        {stimulus:"img/mental_rotation/180_Cm.png", data: {item: "C", type: "mirrored", correct_key: "80", rotation: "180"}},
        {stimulus:"img/mental_rotation/240_C.png", data: {item: "C", type: "identical", correct_key: "81", rotation: "240"}},
        {stimulus:"img/mental_rotation/240_Cm.png", data: {item: "C", type: "mirrored", correct_key: "80", rotation: "240"}},
        {stimulus:"img/mental_rotation/300_C.png", data: {item: "C", type: "identical", correct_key: "81", rotation: "300"}},
        {stimulus:"img/mental_rotation/300_Cm.png", data: {item: "C", type: "mirrored", correct_key: "80", rotation: "300"}},
        {stimulus:"img/mental_rotation/60_C.png", data: {item: "C", type: "identical", correct_key: "81", rotation: "60"}},
        {stimulus:"img/mental_rotation/60_Cm.png", data: {item: "C", type: "mirrored", correct_key: "80", rotation: "60"}}/*,
        {stimulus:"img/mental_rotation/0D.png", data: {item: "D", type: "identical", correct_key: "81", rotation: "0"}},
        {stimulus:"img/mental_rotation/0Dm.png", data: {item: "D", type: "mirrored", correct_key: "80", rotation: "0"}},
        {stimulus:"img/mental_rotation/120_D.png", data: {item: "D", type: "identical", correct_key: "81", rotation: "120"}},
        {stimulus:"img/mental_rotation/120_Dm.png", data: {item: "D", type: "mirrored", correct_key: "80", rotation: "120"}},
        {stimulus:"img/mental_rotation/180_D.png", data: {item: "D", type: "identical", correct_key: "81", rotation: "180"}},
        {stimulus:"img/mental_rotation/180_Dm.png", data: {item: "D", type: "mirrored", correct_key: "80", rotation: "180"}},
        {stimulus:"img/mental_rotation/240_D.png", data: {item: "D", type: "identical", correct_key: "81", rotation: "240"}},
        {stimulus:"img/mental_rotation/240_Dm.png", data: {item: "D", type: "mirrored", correct_key: "80", rotation: "240"}},
        {stimulus:"img/mental_rotation/300_D.png", data: {item: "D", type: "identical", correct_key: "81", rotation: "300"}},
        {stimulus:"img/mental_rotation/300_Dm.png", data: {item: "D", type: "mirrored", correct_key: "80", rotation: "300"}},
        {stimulus:"img/mental_rotation/60_D.png", data: {item: "D", type: "identical", correct_key: "81", rotation: "60"}},
        {stimulus:"img/mental_rotation/60_Dm.png", data: {item: "D", type: "mirrored", correct_key: "80", rotation: "60"}},*/
        ];

        //creates a separate array for preloading the images -> the images array doesn't work because of object structure
        var preload = [];
        for (var i = 0; i < images.length; i++) {
            preload.push(images[i].stimulus);
        }

        var targets = [
            {stimulus:"img/mental_rotation/0A.png", data: {item: "A", type: "target"}},
            {stimulus:"img/mental_rotation/0B.png", data: {item: "B", type: "target"}},
            {stimulus:"img/mental_rotation/0C.png", data: {item: "C", type: "target"}},
            //{stimulus:"img/mental_rotation/0D.png", data: {item: "D", type: "target"}},
        ];

        var pairs = [];

        for (var i = 0; i < images.length; i++) {
            // goes through the image array, sets that item as first stimulus, and then goes to targets array,
            // finds the corresponding target and sets that as second stimulus, storing both the stimuli and their data
            var second_stim = images[i];
            for (var j = 0; j < targets.length; j++ ) {
                if (targets[j].data.item === images[i].data.item) {
                    var first_stim = targets[j];
                }
            }
            // add the pair
            pairs.push([first_stim, second_stim]);
        }   

        //Fisher-Yates/Knuth shuffle algorithm to randomly mix up the pairs array,
        //from Stackoverflow: http://stackoverflow.com/questions/2450954/how-to-randomize-shuffle-a-javascript-array

        function shuffle(array) {
          var currentIndex = array.length, temporaryValue, randomIndex ;
          // While there remain elements to shuffle...
          while (0 !== currentIndex) {

            // Pick a remaining element...
            randomIndex = Math.floor(Math.random() * currentIndex);
            currentIndex -= 1;

            // And swap it with the current element.
            temporaryValue = array[currentIndex];
            array[currentIndex] = array[randomIndex];
            array[randomIndex] = temporaryValue;
          }
          return array;
        }

        //here I shuffle the array containing both the images and the data, and below I separate data and images to 
        //two separate arrays. I only need data from the foil, not the target, so I only add that to the data object
        //in rotation_block.
        var shuffled_pairs = shuffle(pairs);   
        var shuffled_images = [];
        var shuffled_foil_data = [];

        for (i = 0; i < shuffled_pairs.length; i++) {
            shuffled_images.push([shuffled_pairs[i][0].stimulus, shuffled_pairs[i][1].stimulus]);
            //stores data from the foil item into a foil data array that will be appended to the generic data object
            shuffled_foil_data.push(shuffled_pairs[i][1].data);
        }

        var training_image_div = "<div id = 'training_images' display='inline'> <img src='img/mental_rotation/test.png'>"+
        "<img src='img/mental_rotation/60_A.png'> </div>"

        var mental_rotation_instructions = "<h1 class = 'pinkish'>Great job!</h1><p class='centered'>In the next task, you will see " +
            " pairs of images like this:</p><p>" + training_image_div+
            "<p> Your task is to assess as quickly and accurately as you can,"+
            " if the images are identical or mirrored. Press Q if the images "+
            "are identical, and P if they are mirrored. For example, in this case you can see that " +
            "the rotated item on the right is <strong>identical</strong> to the unrotated item on the left, and so you should press Q."+
            "</p><p class = 'centered'>You will first go through a short trial where you can try out the experiment.</p>" +
            "<p class='anykey pinkish'>Press enter to start when you're ready!</p>";

        var correct_feedback = "Correct!";
        var false_feedback = "False!";

        var mental_rotation_intro = {
            type: 'text',
            text: [mental_rotation_instructions],
            cont_key: [13]
        }

        var training_images = shuffled_images.slice(12, 19);
        var training_data = shuffled_foil_data.slice(12, 19);

        var training_block = {
            type: 'two-stim',
            training: true,
            stimuli: training_images,
            prompt: "Press Q if the images are identical, and P if mirrored.",
            correct_feedback: correct_feedback,
            false_feedback: false_feedback,
            data: training_data,
            feedback_duration: 800,
            timing_post_trial: 200
        };


        var rotation_text = "<div id='instructions'><p class='centered'><strong>Great!</strong> You completed the training! The experiment will now follow.<br>" +
            "As always, try and respond as quickly and accurately as you can.</p>"+
            "<p class='anykey'>Press enter to start when you're ready!</p>"

        var rotation_intermezzo = {
            type: 'text',
            text: [rotation_text],
            timing_post_trial: 1000,
            cont_key: [13]
        };

        var rotation_block = {
            type: 'two-stim',
            training: false,
            stimuli: shuffled_images,
            prompt: "Q - identical, P - mirrored.",
            correct_feedback: correct_feedback,
            timing_post_trial: 200,
            false_feedback: false_feedback,
            data: training_data,
            feedback_duration: 500,
            data: shuffled_foil_data
        };

        
        // launch jspsych experiment
        function start() {
            jsPsych.init({
                display_element: $('#jspsych_target'),
                experiment_structure: [mental_rotation_intro, training_block, rotation_intermezzo, rotation_block],
                on_finish:function(data){
                    var data_object = {
                        userId: userId, 
                        data: data
                    };
                    $.ajax({
                        type: "POST",
                        url: "/mental_rotation-data",
                        data: JSON.stringify(data_object),
                        contentType: "application/json"
                    }).done(function() {
                        window.location.href = "spatial_span?userId="+userId; 
                    }).fail(function(jqXHR, textStatus, errorThrown){
                        var data = jqXHR.responseJSON;           
                        if (data.error === "duplicate entry") {
                            window.location.href = "/?error=duplicateid";
                        }
                    });
                }
            });
        }

        // preload images
        // call start() when loading is complete
        jsPsych.preloadImages(preload, start);
        
    </script>
    <script>
        (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){
        (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),
        m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)
        })(window,document,'script','//www.google-analytics.com/analytics.js','ga');

        ga('create', 'UA-55827450-1', 'auto');
        ga('send', 'pageview');
    </script>
</html>